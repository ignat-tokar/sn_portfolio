{"ast":null,"code":"const SEND_MESSAGE = 'SEND_MESSAGE';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Dimych'\n  }, {\n    id: 2,\n    name: 'Andrew'\n  }, {\n    id: 3,\n    name: 'Sveta'\n  }, {\n    id: 4,\n    name: 'Sasha'\n  }, {\n    id: 5,\n    name: 'Viktor'\n  }, {\n    id: 6,\n    name: 'Valera'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Hi'\n  }, {\n    id: 2,\n    message: 'How is your it-kamasutra?'\n  }, {\n    id: 3,\n    message: 'Yo'\n  }, {\n    id: 4,\n    message: 'Yo'\n  }, {\n    id: 5,\n    message: 'Yo'\n  }]\n};\n\nconst dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SEND_MESSAGE:\n      let body = action.newMessageBody;\n      return { ...state,\n        messages: [...state.messages, {\n          id: 6,\n          message: body\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = newMessageBody => ({\n  type: SEND_MESSAGE,\n  newMessageBody\n});\nexport default dialogsReducer;","map":{"version":3,"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","sendMessageCreator"],"sources":["/home/ateros/Documents/sn_portfolio/src/redux/dialogs-reducer.js"],"sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAG;EACfC,OAAO,EAAE,CACL;IAACC,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CADK,EAEL;IAACD,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CAFK,EAGL;IAACD,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CAHK,EAIL;IAACD,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CAJK,EAKL;IAACD,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CALK,EAML;IAACD,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CANK,CADM;EASfC,QAAQ,EAAE,CACN;IAACF,EAAE,EAAE,CAAL;IAAQG,OAAO,EAAE;EAAjB,CADM,EAEN;IAACH,EAAE,EAAE,CAAL;IAAQG,OAAO,EAAE;EAAjB,CAFM,EAGN;IAACH,EAAE,EAAE,CAAL;IAAQG,OAAO,EAAE;EAAjB,CAHM,EAIN;IAACH,EAAE,EAAE,CAAL;IAAQG,OAAO,EAAE;EAAjB,CAJM,EAKN;IAACH,EAAE,EAAE,CAAL;IAAQG,OAAO,EAAE;EAAjB,CALM;AATK,CAAnB;;AAkBA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKV,YAAL;MACI,IAAIW,IAAI,GAAGF,MAAM,CAACG,cAAlB;MACA,OAAO,EACH,GAAGJ,KADA;QAEHH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoB;UAACF,EAAE,EAAE,CAAL;UAAQG,OAAO,EAAEK;QAAjB,CAApB;MAFP,CAAP;;IAIJ;MACI,OAAOH,KAAP;EARR;AAUH,CAXD;;AAaA,OAAO,MAAMK,kBAAkB,GAAID,cAAD,KAAqB;EAACF,IAAI,EAAEV,YAAP;EAAqBY;AAArB,CAArB,CAA3B;AAGP,eAAeL,cAAf"},"metadata":{},"sourceType":"module"}