{"ast":null,"code":"var _jsxFileName = \"/home/ateros/Documents/sn_portfolio/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      isOwner: !this.props.match.params.userId,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      savePhoto: this.props.savePhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  //console.log('mapStateToProps PROFILE')\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n  savePhoto,\n  saveProfile\n}), withRouter)(ProfileContainer);","map":{"version":3,"names":["React","Profile","connect","getStatus","getUserProfile","savePhoto","saveProfile","updateStatus","withRouter","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","authorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"sources":["/home/ateros/Documents/sn_portfolio/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                    isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,SAAnC,EAA8CC,WAA9C,EAA2DC,YAA3D,QAA8E,6BAA9E;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAEA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;EAE3CC,cAAc,GAAG;IACb,IAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;IACA,IAAI,CAACA,MAAL,EAAa;MACTA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;MACA,IAAI,CAACJ,MAAL,EAAa;QACT,KAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;MACH;IACJ;;IACD,KAAKL,KAAL,CAAWV,cAAX,CAA0BS,MAA1B;IACA,KAAKC,KAAL,CAAWX,SAAX,CAAqBU,MAArB;EACH;;EAEDO,iBAAiB,GAAG;IAChB,KAAKR,cAAL;EACH;;EAEDS,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;IAC/C,IAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCS,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EAAsE;MAClE,KAAKD,cAAL;IACH;EACJ;;EAEDa,MAAM,GAAG;IACL,oBACI,oBAAC,OAAD,oBAAa,KAAKX,KAAlB;MACQ,OAAO,EAAE,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAD1C;MAES,OAAO,EAAE,KAAKC,KAAL,CAAWY,OAF7B;MAGS,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAH5B;MAIS,YAAY,EAAE,KAAKb,KAAL,CAAWP,YAJlC;MAKS,SAAS,EAAE,KAAKO,KAAL,CAAWT,SAL/B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GADJ;EAQH;;AAjC0C;;AAoC/C,IAAIuB,eAAe,GAAIC,KAAD,IAAW;EAC7B;EACA,OAAQ;IACJH,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADvB;IAEJC,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFtB;IAGJV,gBAAgB,EAAEY,KAAK,CAACE,IAAN,CAAWlB,MAHzB;IAIJmB,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;EAJf,CAAR;AAMH,CARD;;AAUA,eAAevB,OAAO,CAClBP,OAAO,CAAC0B,eAAD,EAAkB;EAACxB,cAAD;EAAiBD,SAAjB;EAA4BI,YAA5B;EAA0CF,SAA1C;EAAqDC;AAArD,CAAlB,CADW,EAElBE,UAFkB,CAAP,CAGbE,gBAHa,CAAf"},"metadata":{},"sourceType":"module"}