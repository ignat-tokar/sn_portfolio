{"ast":null,"code":"var _jsxFileName = \"/home/ateros/Documents/sn_portfolio/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = _ref => {\n  let {\n    handleSubmit,\n    error,\n    captchaUrl\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, createField(\"Email\", \"email\", [required], Input), createField(\"Password\", \"password\", [required], Input, {\n    type: \"password\"\n  }), createField(null, \"rememberMe\", [], Input, {\n    type: \"checkbox\"\n  }, \"remember me\"), captchaUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }), captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    captchaUrl: props.captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"names":["React","Field","reduxForm","createField","Input","required","connect","login","Redirect","style","LoginForm","handleSubmit","error","captchaUrl","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","mapStateToProps","state","auth"],"sources":["/home/ateros/Documents/sn_portfolio/src/components/Login/Login.jsx"],"sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            { captchaUrl && <img src={captchaUrl} />}\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,uCAAjC;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oDAAlB;;AAEA,MAAMC,SAAS,GAAG,QAAuC;EAAA,IAAtC;IAACC,YAAD;IAAeC,KAAf;IAAsBC;EAAtB,CAAsC;EACrD,oBACI;IAAM,QAAQ,EAAEF,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKR,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACE,QAAD,CAAnB,EAA+BD,KAA/B,CADhB,EAEKD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACE,QAAD,CAAzB,EAAqCD,KAArC,EAA4C;IAACU,IAAI,EAAE;EAAP,CAA5C,CAFhB,EAGKX,WAAW,CAAC,IAAD,EAAO,YAAP,EAAqB,EAArB,EAAyBC,KAAzB,EAAgC;IAACU,IAAI,EAAE;EAAP,CAAhC,EAAoD,aAApD,CAHhB,EAKMD,UAAU,iBAAI;IAAK,GAAG,EAAEA,UAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALpB,EAMMA,UAAU,IAAKV,WAAW,CAAC,oBAAD,EAAuB,SAAvB,EAAkC,CAACE,QAAD,CAAlC,EAA8CD,KAA9C,EAAqD,EAArD,CANhC,EASKQ,KAAK,iBAAI;IAAK,SAAS,EAAEH,KAAK,CAACM,gBAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACLH,KADK,CATd,eAaI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADJ,CAbJ,CADJ;AAmBH,CApBD;;AAsBA,MAAMI,cAAc,GAAGd,SAAS,CAAC;EAACe,IAAI,EAAE;AAAP,CAAD,CAAT,CAA2BP,SAA3B,CAAvB;;AAEA,MAAMQ,KAAK,GAAIC,KAAD,IAAW;EACrB,MAAMC,QAAQ,GAAIC,QAAD,IAAc;IAC3BF,KAAK,CAACZ,KAAN,CAAYc,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD,EAAoEH,QAAQ,CAACI,OAA7E;EACH,CAFD;;EAIA,IAAIN,KAAK,CAACO,MAAV,EAAkB;IACd,oBAAO,oBAAC,QAAD;MAAU,EAAE,EAAE,UAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACH;;EAED,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADG,eAEH,oBAAC,cAAD;IAAgB,QAAQ,EAAEN,QAA1B;IAAoC,UAAU,EAAED,KAAK,CAACN,UAAtD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFG,CAAP;AAIH,CAbD;;AAcA,MAAMc,eAAe,GAAIC,KAAD,KAAY;EAChCf,UAAU,EAAEe,KAAK,CAACC,IAAN,CAAWhB,UADS;EAEhCa,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AAFa,CAAZ,CAAxB;;AAKA,eAAepB,OAAO,CAACqB,eAAD,EAAkB;EAACpB;AAAD,CAAlB,CAAP,CAAkCW,KAAlC,CAAf"},"metadata":{},"sourceType":"module"}